# CI/CD Pipeline Configuration

name: CI/CD Pipeline

# Trigger the workflow on every push to the 'main' branch
on:
  push:
    branches:
      - main

# Define the jobs for the workflow
jobs:
  # Job for code validation
  validate_code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install project dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test

  # Job to dockerize the application using docker-compose
  dockerize:
    runs-on: ubuntu-latest

    needs: validate_code

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Step to build and start the application using docker-compose
      - name: Dockerize the application
        run: |
          # Assuming your Docker Compose file is named docker-compose.yml
          docker-compose up -d

      # Step to send Slack notification on failure or success
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: "#github-notifications"
          message: |
            Dockerize Status: ${{ job.status }}
            Job Name: ${{ github.job }}
            Workflow: ${{ github.workflow }}
            Commit Message: ${{ github.event.head_commit.message }}
            Branch: ${{ github.ref }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Send notification on both success and failure

  # Job for deployment
  deploy_to_production:
    runs-on: ubuntu-latest

    needs: dockerize

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Additional steps for deployment, e.g., Render deployment

      # Step to send Slack notification on failure
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: "#github-notifications"
          message: |
            Deploy to Production Status: ${{ job.status }}
            Job Name: ${{ github.job }}
            Workflow: ${{ github.workflow }}
            Commit Message: ${{ github.event.head_commit.message }}
            Branch: ${{ github.ref }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure() # Send notification on both success and failure
