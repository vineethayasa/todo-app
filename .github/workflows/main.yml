name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install project dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run the application
        run: |
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      - name: Run integration tests using Cypress
        run: |
          npm install cypress cypress-json-results
          npx cypress run

  dockerize:
    runs-on: ubuntu-latest

    needs: build_test_deploy

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Dockerize the application
        run: |
          docker-compose up -d

  deploy_to_production:
    runs-on: ubuntu-latest

    needs: dockerize

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Deploy to production using Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  slack_notification:
    runs-on: ubuntu-latest

    needs: [build_test_deploy, dockerize, deploy_to_production]

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Send Slack notification on failure
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: "#github-notifications"
          message: |
            Build and Deploy Status: ${{ job.status }}
            Job Name: ${{ github.job }}
            Workflow: ${{ github.workflow }}
            Commit Message: ${{ github.event.head_commit.message }}
            Branch: ${{ github.ref }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure() # Send notification only on job failure
