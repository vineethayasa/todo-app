name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  validate-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run the app
        id: run-app
        run: |
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      - name: Run integration tests
        run: |
          npm install cypress cypress-json-results
          npx cypress run

    # deploy:
    # runs-on: ubuntu-latest

    # needs: build-and-test

    # steps:
    #   - name: Checkout repository code
    #     uses: actions/checkout@v3

    #   - name: Deploy to staging
    #     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #     run: |
    #       echo "Deploying to staging environment"
    #       # Add your deployment commands here
    #       # Example: scp or rsync to copy files to the server
    #       # Example: ssh to the server and restart the application
